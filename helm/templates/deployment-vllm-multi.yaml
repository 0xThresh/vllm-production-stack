{{- range $modelSpec := .Values.servingEngineSpec.modelSpec }}
{{- with $ -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-{{$modelSpec.name}}-deployment-vllm"
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "chart.engineLabels" . | nindent 4 }}
spec:
  replicas: {{ $modelSpec.replicaCount }}
  {{- include "chart.strategy" . | nindent 2 }}
  selector:
    matchLabels:
    {{- include "chart.engineLabels" . | nindent 6 }}
  progressDeadlineSeconds: 1200
  template:
    metadata:
      labels:
      {{- include "chart.engineLabels" . | nindent 8 }}
    spec:
      containers:
        - name: "vllm"
          image: "{{ required "Required value 'modelSpec.image.repository' must be defined !" $modelSpec.image.repository }}:{{ required "Required value 'modelSpec.image.tag' must be defined !" $modelSpec.image.tag }}"
          {{- if $modelSpec.image.command }}
          command :
            {{- with $modelSpec.image.command }}
            {{- toYaml . | nindent 10 }}
            {{- end }}
          {{- end }}
          securityContext:
            runAsNonRoot: false
          imagePullPolicy: IfNotPresent
          {{- if $modelSpec.image.env }}
          env:
          - name: HF_HOME
            value: /data
            {{- with $modelSpec.image.env }}
            {{- toYaml . | nindent 10 }}
            {{- end }}
          {{- else }}
          env: []
          {{- end }}
          {{- if .Values.servingEngineSpec.configs }}
          envFrom:
            - configMapRef:
                name: "{{ .Release.Name }}-configs"
          {{- end }}          
          ports:
            - name: {{ include "chart.container-port-name" . }}
              containerPort: {{ include "chart.container-port" . }}
          {{- include "chart.probes" . | indent 10 }}
          resources: {{- include "chart.resources" $modelSpec | nindent 12 }}
          volumeMounts:
          - name: {{ .Release.Name }}-storage
            mountPath: /data

      volumes:
        - name: {{ .Release.Name }}-storage
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-{{$modelSpec.name}}-storage-claim"

      {{- if .Values.servingEngineSpec.tolerations }}
      {{-   with .Values.servingEngineSpec.tolerations }}
      tolerations:
        {{-   toYaml . | nindent 8 }}
      {{-   end }}
      {{- end }}

      {{- if (gt (int $modelSpec.requestGPU ) 0) }}
      runtimeClassName: nvidia
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: nvidia.com/gpu.product
                  operator: In
                  {{- with $modelSpec.gpuModels }}
                  values:
                    {{- toYaml . | nindent 20 }}
                  {{- end }}
      {{- end }} 
{{- end }}
---
{{- end }}
